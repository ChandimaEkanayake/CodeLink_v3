{
  "a1b2c3d": [
    {
      "id": "a1b2c3d_c1",
      "filePath": "README.md",
      "changeType": "modified",
      "diff": "@@ -1,5 +1,15 @@\n# PyShop - Python eCommerce Platform\n\n-A simple eCommerce platform built with Django.\n+A comprehensive eCommerce platform built with Django and Python.\n+\n+## Deployment Instructions\n+\n+### Prerequisites\n+- Python 3.9+\n+- PostgreSQL 13+\n+- Redis for caching\n+\n+### Production Deployment\n+1. Set up environment variables (see `.env.example`)\n+2. Run `python manage.py migrate`\n+3. Run `python manage.py collectstatic`\n+4. Configure Gunicorn and Nginx"
    },
    {
      "id": "a1b2c3d_c2",
      "filePath": "deployment/nginx.conf",
      "changeType": "added",
      "diff": "@@ -0,0 +1,25 @@\n+# Nginx config\n+server {\n+    listen 80;\n+    server_name pyshop.example.com;\n+    location /static/ {\n+        root /var/www/pyshop;\n+    }\n+    location / {\n+        proxy_pass http://unix:/run/gunicorn.sock;\n+        proxy_set_header Host $host;\n+    }\n+}"
    },
    {
      "id": "a1b2c3d_c3",
      "filePath": ".env.example",
      "changeType": "added",
      "diff": "@@ -0,0 +1,7 @@\n+DEBUG=False\n+SECRET_KEY=your-secret\n+DATABASE_URL=postgres://user:pass@localhost:5432/pyshop\n+STRIPE_SECRET_KEY=sk_test_...\n+STRIPE_PUBLISHABLE_KEY=pk_test_...\n+REDIS_URL=redis://localhost:6379\n+"
    }
  ],
  "e4f5g6h": [
    {
      "id": "e4f5g6h_c1",
      "filePath": "pyshop/products/views.py",
      "changeType": "modified",
      "diff": "@@ def product_list(request):\n-    products = Product.objects.all()\n+    query = request.GET.get('q')\n+    if query:\n+        products = Product.objects.filter(name__icontains=query)\n+    else:\n+        products = Product.objects.all()"
    },
    {
      "id": "e4f5g6h_c2",
      "filePath": "pyshop/templates/products/product_list.html",
      "changeType": "modified",
      "diff": "@@ <h2>Product List</h2>\n+<form method=\"get\">\n+  <input type=\"text\" name=\"q\" placeholder=\"Search products\">\n+  <button type=\"submit\">Search</button>\n+</form>"
    },
    {
      "id": "e4f5g6h_c3",
      "filePath": "pyshop/tests/test_products.py",
      "changeType": "added",
      "diff": "@@ def test_search_filter(client):\n+    Product.objects.create(name='Laptop')\n+    response = client.get('/products/?q=Lap')\n+    assert b'Laptop' in response.content"
    }
  ],
  "z1y2x3w": [
    {
      "id": "z1y2x3w_c1",
      "filePath": "pyshop/cart/views.py",
      "changeType": "modified",
      "diff": "@@ def add_to_cart(request, product_id):\n-    cart = request.session.get('cart', {})\n+    cart = request.session.setdefault('cart', {})\n+    request.session.modified = True"
    },
    {
      "id": "z1y2x3w_c2",
      "filePath": "pyshop/cart/utils.py",
      "changeType": "modified",
      "diff": "@@ def save_cart(session, cart):\n-    session['cart'] = cart\n+    session.update({'cart': cart})\n+    session.modified = True"
    },
    {
      "id": "z1y2x3w_c3",
      "filePath": "pyshop/tests/test_cart.py",
      "changeType": "added",
      "diff": "@@ def test_cart_session_persistence(client):\n+    session = client.session\n+    session['cart'] = {'1': 2}\n+    session.save()\n+    response = client.get('/cart/')\n+    assert response.status_code == 200"
    }
  ],
  "i7j8k9l": [
    {
      "id": "i7j8k9l_c1",
      "filePath": "manage.py",
      "changeType": "added",
      "diff": "@@ -0,0 +1,20 @@\n+import os\n+import sys\n+if __name__ == '__main__':\n+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pyshop.settings')\n+    from django.core.management import execute_from_command_line\n+    execute_from_command_line(sys.argv)"
    },
    {
      "id": "i7j8k9l_c2",
      "filePath": "pyshop/settings.py",
      "changeType": "added",
      "diff": "@@ -0,0 +1,15 @@\n+SECRET_KEY = 'dev-key'\n+DEBUG = True\n+INSTALLED_APPS = [ 'pyshop.products' ]"
    },
    {
      "id": "i7j8k9l_c3",
      "filePath": "pyshop/products/models.py",
      "changeType": "added",
      "diff": "@@ class Product(models.Model):\n+    name = models.CharField(max_length=100)\n+    price = models.DecimalField(max_digits=10, decimal_places=2)"
    }
  ],
  "m1n2o3p": [
    {
      "id": "m1n2o3p_c1",
      "filePath": "pyshop/payments/views.py",
      "changeType": "modified",
      "diff": "@@ def stripe_webhook(request):\n+    if event.type == 'payment_intent.succeeded':\n+        payment.status = 'completed'\n+        payment.save()"
    },
    {
      "id": "m1n2o3p_c2",
      "filePath": "pyshop/payments/urls.py",
      "changeType": "modified",
      "diff": "@@ urlpatterns = [\n+    path('webhook/', views.stripe_webhook, name='stripe_webhook'),"
    },
    {
      "id": "m1n2o3p_c3",
      "filePath": "pyshop/tests/test_payments.py",
      "changeType": "added",
      "diff": "@@ def test_webhook_success(client):\n+    payload = {\"type\": \"payment_intent.succeeded\"}\n+    response = client.post('/payments/webhook/', json=payload)\n+    assert response.status_code == 200"
    }
  ],
  "q4r5s6t": [
    {
      "id": "q4r5s6t_c1",
      "filePath": "pyshop/payments/views.py",
      "changeType": "modified",
      "diff": "@@ def payment_process(request):\n+    intent = stripe.PaymentIntent.create(...)\n+    return JsonResponse({'clientSecret': intent.client_secret})"
    },
    {
      "id": "q4r5s6t_c2",
      "filePath": "pyshop/payments/models.py",
      "changeType": "modified",
      "diff": "@@ class Payment(models.Model):\n+    created = models.DateTimeField(auto_now_add=True)"
    },
    {
      "id": "q4r5s6t_c3",
      "filePath": "pyshop/templates/payments/process.html",
      "changeType": "modified",
      "diff": "@@ <form>\n+  <script src=\"https://js.stripe.com/v3/\"></script>\n+  <button>Pay</button>\n+</form>"
    }
  ],
  "u7v8w9x": [
    {
      "id": "u7v8w9x_c1",
      "filePath": "pyshop/payments/models.py",
      "changeType": "added",
      "diff": "@@ class Payment(models.Model):\n+    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n+    stripe_payment_id = models.CharField(max_length=255)\n+    amount = models.DecimalField(max_digits=10, decimal_places=2)"
    },
    {
      "id": "u7v8w9x_c2",
      "filePath": "pyshop/payments/migrations/0001_initial.py",
      "changeType": "added",
      "diff": "@@ -0,0 +1,15 @@\n+class Migration(migrations.Migration):\n+    operations = [\n+        migrations.CreateModel(\n+            name='Payment',\n+            fields=[...]\n+        )\n+    ]"
    },
    {
      "id": "u7v8w9x_c3",
      "filePath": "pyshop/orders/views.py",
      "changeType": "modified",
      "diff": "@@ def checkout(request):\n+    if form.is_valid():\n+        order = form.save()\n+        return redirect('payments:process')"
    }
  ]
}